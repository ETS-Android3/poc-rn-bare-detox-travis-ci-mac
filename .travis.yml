language: node_js
node_js: lts/*
git:
  quiet: true
env:
  global:
    - ABI=x86_64
    - ADB_INSTALL_TIMEOUT=8
    - ANDROID_HOME=${HOME}/android-sdk
    - ANDROID_TOOLS_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"
    - EMU_FLAVOR=default # use google_apis flavor if no default flavor emulator
    - GRAVIS="https://raw.githubusercontent.com/DanySK/Gravis-CI/master/"
    - JDK="1.8"
    - TOOLS=${ANDROID_HOME}/tools
    # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/build-tools:${PATH}
    - API=28
    - NODE_VERSION=lts/*
branches:
  only:
    - master
    - develop
jobs:
  include:
  - name: Unit tests
    cache:
      directories:
        - "$HOME/.npm"
    install:
      - npm install -g react-native-cli
      - npm install -g detox-cli
      - npm install
    script: npm run test:unit
  - name: Integration iOS tests
    os: osx
    osx_image: xcode11.3
    language: objective-c
    cache:
      cocoapods: true
    podfile: "./ios/Podfile"
    install:
      - brew tap wix/brew
      - brew install applesimutils
      - npm install -g react-native-cli
      - npm install -g detox-cli
      - npm install
    script:
      - npm run ios:pod:install
      - npm run detox:ios:release:build > /dev/null
      - npm run detox:ios:release:test
  - name: Integration Android tests
    before_cache:
      - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
      - curl "${GRAVIS}.clean_gradle_cache.sh" --output ~/.clean_gradle_cache.sh
      - bash ~/.clean_gradle_cache.sh > /dev/null

    cache:
      directories:
        - $HOME/.gradle/caches/
        - $HOME/.gradle/wrapper/
    dist: bionic
    sudo: required
    language: bash
    before_install:
        # This section may run on all platforms, and may run for unit tests or for coverage finalization
        # It should not make assumptions about os platform or desired tool installation

        # Set up JDK 8 for Android SDK - Java is universally needed: codacy, unit tests, emulators
        - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
        - export TARGET_JDK="${JDK}"
        - JDK="1.8"
        - source ~/.install-jdk-travis.sh

        # Set up Android SDK - this is needed everywhere but coverage finalization, so toggle on that
        - wget -q "${ANDROID_TOOLS_URL}" -O android-sdk-tools.zip;
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME};
        - rm android-sdk-tools.zip;
        - mkdir -p ~/.android; # avoid harmless sdkmanager warning
        - echo 'count=0' > ~/.android/repositories.cfg; # avoid harmless sdkmanager warning
        - yes | sdkmanager --licenses >/dev/null; # accept all sdkmanager warnings
        - echo y | sdkmanager --no_https "platform-tools" >/dev/null;
        - echo y | sdkmanager --no_https "tools" >/dev/null; # A second time per Travis docs, gets latest versions
        - echo y | sdkmanager --no_https "build-tools;28.0.3" >/dev/null; # Implicit gradle dependency - gradle drives changes
        - echo y | sdkmanager --no_https "platforms;android-28" >/dev/null; # We need the API of the current compileSdkVersion from gradle.properties
    install:
      - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash
      - export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
      - nvm install $NODE_VERSION
      - nvm use $NODE_VERSION
      - nvm alias default $NODE_VERSION

      - npm install -g react-native-cli
      - npm install -g detox-cli
      - npm install
      
      # In our setup, install only runs on matrix entries we want full emulator tests on
      # That only happens currently on linux, so this section can assume linux + emulator is desired
      # Download required emulator tools
      - echo y | sdkmanager --no_https "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
      - echo y | sdkmanager --no_https "emulator" >/dev/null
      - echo y | sdkmanager --no_https "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null # install our emulator

      # Set up KVM on linux for hardware acceleration. Manually here so it only happens for emulator tests, takes ~30s
      - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder
      - sudo adduser $USER libvirt
      - sudo adduser $USER kvm

      # Create an Android emulator
      - echo no | avdmanager create avd --force -n pixel_xl -d "pixel_xl" -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
      - |
        EMU_PARAMS="-verbose -no-snapshot -no-window -camera-back none -camera-front none -selinux permissive -qemu -m 2048"
        EMU_COMMAND="emulator"
        # This double "sudo" monstrosity is used to have Travis execute the
        # emulator with its new group permissions and help preserve the rule
        # of least privilege.
        sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/${EMU_COMMAND} -avd pixel_xl ${AUDIO} ${EMU_PARAMS} &"
      
      # Wait for emulator to be ready
      - ./tools/android-wait-for-emulator.sh
      - adb shell input keyevent 82 &

      # Switch back to our target JDK version to build and run tests
      - JDK="${TARGET_JDK}"
      - source ~/.install-jdk-travis.sh
    before_script:
      - sdkmanager --list
      - android list avd
      - android list target
      - openssl aes-256-cbc -K $encrypted_b6e934f6223e_key -iv $encrypted_b6e934f6223e_iv -in ./android/RNDetoxTravisTest.keystore.enc -out ./android/RNDetoxTravisTest.keystore -d
      - npm run detox:android:release:build
      - ${ANDROID_HOME}/build-tools/28.0.3/zipalign -v -p 4 ./android/app/build/apk/release/app-release-unsigned.apk ./android/app/build/apk/release/app-release-aligned.apk
      - ${ANDROID_HOME}/build-tools/28.0.3/apksigner sign --ks ./android/RNDetoxTravisTest.keystore --out ./android/app/build/apk/release/app-release.apk ./android/app/build/apk/release/app-release-aligned.apk 
      - ${ANDROID_HOME}/build-tools/28.0.3/apksigner verify ./android/app/build/apk/release/app-release.apk
      - ${ANDROID_HOME}/build-tools/28.0.3/zipalign -v -p 4 ./android/app/build/apk/androidTest/release/app-release-androidTest.apk ./android/app/build/apk/androidTest/release/app-release-aligned.apk
      - ${ANDROID_HOME}/build-tools/28.0.3/apksigner sign --ks ./android/RNDetoxTravisTest.keystore --out ./android/app/build/apk/androidTest/release/app-release-androidTest.apk ./android/app/build/apk/androidTest/release/app-release-aligned.apk
      - ${ANDROID_HOME}/build-tools/28.0.3/apksigner verify ./android/app/build/apk/androidTest/release/app-release-androidTest.apk
    script:
      - npm run detox:android:release:test
